/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/recipes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get all recipes */
        get: operations["getRecipes"];
        put?: never;
        /** Add a new recipe to the store */
        post: operations["addRecipe"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/recipes/{recipeId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Find a recipe by ID
         * @description Returns a single recipe
         */
        get: operations["getRecipeById"];
        put?: never;
        /** Updates a recipe in the store */
        post: operations["updateRecipe"];
        /** Deletes a recipe */
        delete: operations["deleteRecipe"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** @description Represents an error */
        Error: {
            code: number;
            message: string;
        };
        /**
         * @description Recipe status in the store
         * @enum {string}
         */
        RecipeStatus: "available" | "pending" | "sold";
        Recipe: {
            /** Format: int64 */
            id?: number;
            name: string;
            photoUrls?: string[];
            status?: components["schemas"]["RecipeStatus"];
        };
    };
    responses: never;
    parameters: never;
    requestBodies: {
        /** @description Recipe object that needs to be added to the store */
        Recipe: {
            content: {
                "application/json": components["schemas"]["Recipe"];
            };
        };
    };
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    getRecipes: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful operation */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Recipe"][];
                };
            };
            /** @description Something went wrong */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    addRecipe: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Create a new recipe in the store */
        requestBody: {
            content: {
                "application/json": components["schemas"]["Recipe"];
            };
        };
        responses: {
            /** @description Successful operation */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Recipe"];
                };
            };
            /** @description Something went wrong */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    getRecipeById: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description ID of the recipe to return */
                recipeId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description successful operation */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Recipe"];
                };
            };
            /** @description Something went wrong */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    updateRecipe: {
        parameters: {
            query?: {
                /** @description Name of the recipe that needs to be updated */
                name?: string;
                /** @description Status of the recipe that needs to be updated */
                status?: components["schemas"]["RecipeStatus"];
            };
            header?: never;
            path: {
                /** @description ID of the recipe that needs to be updated */
                recipeId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description successful operation */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Something went wrong */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    deleteRecipe: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Recipe ID to delete */
                recipeId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description successful operation */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Something went wrong */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
}
