openapi: 3.1.0
servers:
  - url: /api
info:
  version: 1.0.0
  title: Recipes
  description: An API to manage your favourite recipes
tags:
  - name: Recipe
    description: Everything about your recipes
paths:
  /recipe:
    post:
      tags:
        - Recipe
      summary: Add a new recipe to the store
      operationId: addRecipe
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipe'
      requestBody:
        description: Create a new recipe in the store
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recipe'
  '/recipe/{recipeId}':
    get:
      tags:
        - Recipe
      summary: Find a recipe by ID
      description: Returns a single recipe
      operationId: getRecipeById
      parameters:
        - name: recipeId
          in: path
          description: ID of the recipe to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipe'
        '404':
          description: Recipe not found
    post:
      tags:
        - Recipe
      summary: Updates a recipe in the store
      description: ''
      operationId: updateRecipe
      parameters:
        - name: recipeId
          in: path
          description: ID of the recipe that needs to be updated
          required: true
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          description: Name of the recipe that needs to be updated
          schema:
            type: string
        - name: status
          in: query
          description: Status of the recipe that needs to be updated
          schema:
            $ref: '#/components/schemas/RecipeStatus'
      responses:
        '200':
          description: successful operation
    delete:
      tags:
        - Recipe
      summary: Deletes a recipe
      description: ''
      operationId: deleteRecipe
      parameters:
        - name: recipeId
          in: path
          description: Recipe ID to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
components:
  schemas:
    RecipeStatus:
      type: string
      description: Recipe status in the store
      enum:
        - available
        - pending
        - sold
    Recipe:
      required:
        - name
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: Spaghetti Carbonara
        photoUrls:
          type: array
          items:
            type: string
        status:
          $ref: '#/components/schemas/RecipeStatus'
      type: object
  requestBodies:
    Recipe:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Recipe'
      description: Recipe object that needs to be added to the store